[package]
name = "rust_assembly"
version = "0.1.0"
authors = ["Ido s <ido_do@outlook.com>"]
edition = "2021"


[lib]
crate-type = ["cdylib", "rlib"]
path = "src/lib.rs"


[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2.80"
serde = { version = "1.0.137", features = ["derive"] }
serde_json = "1.0.81"
lazy_static = "1.4.0"
regex = "1.5.6"
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }
num = "0.4.0"

[dev-dependencies]
cargo-edit = "0.9.1"

[profile.dev]
opt-level = 0
debug = true
debug-assertions = true
overflow-checks = true
lto = false
panic = 'unwind'
incremental = true
rpath = false

[profile.release]
# Tell `rustc` to optimize for small code size.
codegen-units = 1
opt-level = 3
lto = true

[target.wasm32-unknown-unknown]
rustflags = [
  "-C", "link-args=-z stack-size=99999999",
]
